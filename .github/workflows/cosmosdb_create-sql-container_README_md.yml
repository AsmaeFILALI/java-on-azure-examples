on: 
  schedule: 
    - cron: '0 6 * * 2'
  workflow_dispatch: 

name: 'cosmosdb/create-sql-container/README.md'
jobs: 
  validate: 
    runs-on: 'ubuntu-latest'
    steps: 
      - uses: 'azure/login@v1'
        with: 
          allow-no-subscriptions: 'true'
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - uses: 'actions/checkout@v2'
      - run: | 
          if [[ -z $RESOURCE_GROUP ]]; then
          export RESOURCE_GROUP=java-on-azure-$RANDOM
          fi
          export REGION=eastus2
          az group create --name $RESOURCE_GROUP --location $REGION
          export DELETE_AFTER=$(( `date +%s` + 7200))
          az group update --name $RESOURCE_GROUP --set tags.'DeleteAfter'="$DELETE_AFTER"
          
          if [[ -z $COSMOSDB_ACCOUNT_NAME ]]; then
          export COSMOSDB_ACCOUNT_NAME=cosmosdb-$RANDOM
          az cosmosdb create \
          --name $COSMOSDB_ACCOUNT_NAME \
          --resource-group $RESOURCE_GROUP
          fi
          
          
          if [[ -z $COSMOSDB_SQL_DATABASE ]]; then
          export COSMOSDB_SQL_DATABASE=sql-database-$RANDOM
          az cosmosdb sql database create \
          --resource-group $RESOURCE_GROUP \
          --account-name $COSMOSDB_ACCOUNT_NAME \
          --name $COSMOSDB_SQL_DATABASE
          fi
          
          
          if [[ -z $COSMOSDB_SQL_CONTAINER ]]; then
          export COSMOSDB_SQL_CONTAINER=sql-container-$RANDOM
          az cosmosdb sql container create \
          --resource-group $RESOURCE_GROUP \
          --account-name $COSMOSDB_ACCOUNT_NAME \
          --database-name $COSMOSDB_SQL_DATABASE \
          --name $COSMOSDB_SQL_CONTAINER \
          --partition-key-path '/id'
          fi
          
          
          export RESULT=$(az cosmosdb sql container show \
          --resource-group $RESOURCE_GROUP \
          --account-name $COSMOSDB_ACCOUNT_NAME \
          --database-name $COSMOSDB_SQL_DATABASE \
          --name $COSMOSDB_SQL_CONTAINER \
          --output tsv --query id)
          az group delete --name $RESOURCE_GROUP --yes || true
          if [[ "$RESULT" == "" ]]; then
          echo "Failed to create CosmosDB SQL container $COSMOSDB_SQL_CONTAINER"
          exit 1
          fi